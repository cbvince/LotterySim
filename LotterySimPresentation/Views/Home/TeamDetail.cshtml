@using LotterySim.Business


@model LotterySim.Business.Team


@{
    ViewBag.Title = Model.OriginalTeamName;
}

<div class="container">


    <div class="row">
        <div class="col">
            <img src=@Url.Content(@Model.TeamImage) width="150" height="150" />
        </div>
    </div>
    <div class="row">
        <div class="col-10">
            <h2>@Model.OriginalTeamName @Model.TeamNickName </h2>
        </div>
        <div class="col">
            <input type="button" name="btnReset" class="btn btn-primary" value="Back to Lottery" onclick="location.href='@Url.Action("Index", "Home")'" />

        </div>

    </div>
    <div class="row">
        <hr />
        <h5>Record: @Model.WinLossRecord | Last 10: @Model.LastTenGamesRecord  |  Streak: @Model.WinLossStreak</h5>
    </div>


</div>
<p></p>

<div class="container">
    <div class="row"><h2>Incoming Picks</h2><hr /></div>

    @if (GetTeams.IncomingPicks(Model).Count == 0)
    {
        <h5>None</h5>
    }

    <div class="card-deck">
        <div class="row">
            @foreach (var team in GetTeams.IncomingPicks(Model))

            {
                <div class="col">
                    <div class="card" style="width: 18rem;">
                        <a href="@Url.Action("TeamDetail", "Home",  new { teamname = team.OriginalTeamName })">
                            <img class="card-img-top" src=@GetTeamImageHelper(team.OriginalTeamName) alt="@team.OriginalTeamName" width="150" height="150" />
                        </a>
                        <div class="card-body">
                            <h5 class="card-title">Pick# @team.PickNumber @DisplayHelper.DisplayLockIcon(team)</h5>
                            <p class="card-text"></p>

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

</div>


<p></p>
<div class="container">


    <div class="row"><h2>Outgoing Picks</h2><hr /></div>

    @if (GetTeams.OutGoingPicks(Model).Count == 0)
    {
        <h5>None</h5>
    }


    <div class="card-deck">
        <div class="row">

            

            @foreach (var team in GetTeams.OutGoingPicks(Model))

            {
                <div class="col">
                    <div class="card" style="width: 18rem;">
                        <a href="@Url.Action("TeamDetail", "Home",  new { teamname = team.NewTeamName })">
                            <img class="card-img-top" src=@GetTeamImageHelper(@team.NewTeamName) alt="@team.NewTeamName" width="150" height="150">
                        </a>
                        <div class="card-body">
                            <h5 class="card-title">Pick# @team.PickNumber</h5>
                            <p class="card-text"></p>

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

</div>



<p></p>
<div class="container">
    <div class="row"><h2>Non-Conveyed Picks</h2><hr /></div>

    @if (@LotterySim.Business.GetTeams.NonConveyedPicks(Model).Count == 0)
    {
        <h5>None</h5>
    }


    <div class="card-deck">
        <div class="row">



            @foreach (var team in @LotterySim.Business.GetTeams.NonConveyedPicks(Model))

            {
                <div class="col">
                    <div class="card" style="width: 18rem;">
                        <a href="@Url.Action("TeamDetail", "Home",  new { teamname = team.OriginalTeamName })">
                            <img class="card-img-top" src=@GetTeamImageHelper(@team.OriginalTeamName) alt="@team.OriginalTeamName" width="150" height="150">
                        </a>
                        <div class="card-body">
                            <h5 class="card-title">Pick# @team.PickNumber @DisplayHelper.DisplayLockIcon(team)</h5>
                            <p class="card-text"></p>

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

</div>




@helper GetTeamImageHelper(string teamname)
{
    var imageString = "~/Content/Images/" + teamname.Replace(" ", "") + ".svg";
    @Url.Content(imageString)
}









