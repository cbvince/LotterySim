@using LotterySim.Business.NBA
@using LotterySim.Business
@model NBADraftPick

<tr>
	<td>@Model.PickNumber</td>
	<td align="right"><span class=@GetLotteryMovementColor(Model)>@Model.LotteryMovement</span></td>
	<td>@DisplayTeamNameAndImage(Model)  @DisplayHelper.DisplayLockIcon(Model)</td>
	<td>@Model.Team.WinLossRecord</td>
	<td>@Model.Team.WinPercentage.ToString(".000")</td>
	<td> @Model.Team.InverseGamesBack</td>

	@if (Model.Team is NBATeam t)
	{
		<td><span class="@NBAStandingsHelper.GetWinLossStreakColor(t)">@t.WinLossStreak</span></td>
		<td><span class="@NBAStandingsHelper.GetLast10WinLossColor(t)">@t.LastTenGamesRecord</span></td>
		<td>@t.TopFourPickOdds</td>
		<td>@t.TopPickOdds</td>
	}

</tr>

@{


	string GetLotteryMovementColor(NBADraftPick draftPick)
	{
		var color = string.Empty;

		if (draftPick.LotteryMovement > 0)
		{
			color = "text-success";

		}
		else if (draftPick.LotteryMovement < 0)
		{
			color = "text-danger";
		}
		return color;
	}


}

@helper DisplayTeamNameAndImage(LotterySim.Business.Common.IDraftPick draftPick)
{
    if (draftPick.PickSwapType == PickSwapType.Swapped)
    {
        <span>
            @GetURLTeamName(draftPick.Team.TeamName)
            @GetTeamImage(draftPick.Team)
            @DisplayArrow()
            @GetURLTeamName(draftPick.TeamPickOwedTo.TeamName)
            @GetTeamImage(draftPick.TeamPickOwedTo)
        </span>
    }
    else
    {
        <span>
            @GetURLTeamName(draftPick.Team.TeamName)
            @GetTeamImage(draftPick.Team)
        </span>
    }
}

@helper GetTeamImage(LotterySim.Business.Common.ITeam team)
{

    <img src="@Url.Content(team.ImageUrl)" width="30" height="30" />
}

@helper DisplayArrow()
{
    <i class="bi bi-arrow-right"  style="font-size: 1rem"></i>
}

@helper GetURLTeamName(string teamName)
{
    @Html.ActionLink(teamName, "TeamDetail", new { teamname = teamName }, new { @class = "teamlink" })
}