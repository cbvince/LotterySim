@using LotterySim.Business.NFL
@using LotterySim.Business
@model LotterySim.Business.NFL.NFLTeam.NFLDraftPick

@{
    var data = (int)ViewData["Round"];
}



<tr>
    <td>@Model.PickNumber</td>
    <td>@ReturnSwapTeamInfo(Model)<img src="@Url.Content(Model.Team.team.logos[0].href)" width="30" height="30" />
        @Html.ActionLink(Model.Team.team.displayName, "NFLTeamDetail", new { teamID = Model.Team.team.id }, new { @class = "teamlink" })
</td>
    <td>@Model.Team.stats[1].value-@Model.Team.stats[2].value</td>
    <td>@Model.Team.stats[3].displayValue</td>
    <td>@Model.Team.stats[4].value</td>
    <td>@GetStreak(Model.Team)</td>
</tr>


@helper ReturnSwapTeamInfo(NFLTeam.NFLDraftPick pick)
{
    if (pick.PickSwapType == PickSwapType.Swapped)
    {

    <img src="@Url.Content(pick.OriginalTeam.team.logos[0].href)" width="30" height="30" />
    
    @Html.ActionLink(pick.OriginalTeam.team.displayName, "NFLTeamDetail", new { teamID = pick.OriginalTeam.team.id })

       
    <i class="bi bi-arrow-right" style="font-size: 1rem"></i>

    }
}

@helper GetStreak(NFLTeam.Entry entry)
{
    switch (entry.stats[9].value)
    {

        case var expression when entry.stats[9].value >= 2:
            <span class="text-danger">@entry.stats[9].displayValue</span>;
            break;
        case var expression when entry.stats[9].value <= -2:
            <span class="text-success">@entry.stats[9].displayValue</span>
            break;
        default:
            <span>@entry.stats[9].displayValue</span>

            break;
    }

}
